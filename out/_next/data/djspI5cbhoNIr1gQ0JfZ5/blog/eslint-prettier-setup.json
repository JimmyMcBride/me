{"pageProps":{"htmlString":"\n## Setting Up ESLint And Prettier 🎨\n\n![eslint and prettier](https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fmiro.medium.com%2Fmax%2F1328%2F1*fA65R1umkZBVJjyBTTy6Xw.png&f=1&nofb=1)\n\n### Objective\n\nSetting up linters and code formatters is really important to group projects.\nWhen people are doing things like using different kinds of quotes, or people are\nfollowing different semicolon rules, code can become a confusing mess real quick.\nAdding things like code formatters and linters can be really beneficial to building\na uniform and readable code base.\nThis guide aims to help you easily set these things up in your groups project.\n\n#### Technologies Discussed\n\n- ESLint\n- Prettier\n\n#### References\n\n- [ESLint Docs](https://eslint.org/)\n- [ESLint VS Code Extension](https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint)\n- [Prettier Docs](https://prettier.io/)\n- [Prettier VS Code Extension](https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode)\n\n### Install ESLint and Prettier VS Code Extensions\n\nMake sure every team member has\n[prettier](https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode)\nand [eslint](https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint)\nVS Code extension's installed.\n\n> It's recommended to turn format on save on. Click on prettier link above and\n> search for \"Format On Save\" for instructions on setting that up in vs code.\n> Also, check out section \"Linter Integration\". 🔥\n\n### Configure ESLint and Prettier\n\nNow we need to add dependencies to our project with some rc files! Woo hoo! 👏\n\nIn the root of your project's directory run;\n`yarn add eslint prettier eslint-config-prettier eslint-plugin-prettier`\nor `npm i eslint prettier eslint-config-prettier eslint-plugin-prettier`.\n\n> For react apps, add `eslint-plugin-react` to dependencies as well!\n> Then we can add a file named `.eslintrc.js` with the following content for a\n> react app.\n\n#### Example React Config\n\n```javascript\nmodule.exports = {\n  env: {\n    commonjs: true,\n    browser: true,\n    es6: true,\n    node: true,\n  },\n  extends: [\n    \"eslint:recommended\",\n    \"plugin:react/recommended\",\n    \"plugin:prettier/recommended\",\n  ],\n  parserOptions: {\n    ecmaFeatures: {\n      jsx: true,\n    },\n    ecmaVersion: 2018,\n    sourceType: \"module\",\n  },\n  plugins: [\"react\", \"prettier\"],\n  rules: {},\n  overrides: [\n    {\n      files: [\"**/*.test.js\"],\n      env: {\n        jest: true,\n      },\n    },\n  ],\n};\n```\n\n#### Example Node Config\n\n```javascript\nmodule.exports = {\n  env: {\n    node: true,\n    commonjs: true,\n    es6: true,\n  },\n  extends: [\"eslint:recommended\", \"plugin:prettier/recommended\"],\n  parserOptions: {\n    ecmaFeatures: {\n    ecmaVersion: 2018,\n    sourceType: \"module\",\n  },\n  plugins: [\"prettier\"],\n  rules: {},\n  overrides: [\n    {\n      files: [\"**/*.test.js\"],\n      env: {\n        jest: true,\n      },\n    },\n  ],\n};\n```\n\nBy adding `.prettierrc.js` to our root with the following content\nfor both React and Node projects, then the whole team will have shared formatter\nrules.\n\n```javascript\nmodule.exports = {\n  trailingComma: \"es5\",\n  tabWidth: 2,\n  semi: true,\n  singleQuote: true,\n};\n```\n\nThen we can add some scripts to our `package.json`.\n\n```json\n{\n  \"scripts\": {\n    \"lint\": \"eslint .\",\n    \"lint:fix\": \"eslint --fix .\",\n    \"format\": \"prettier --write \\\"**/*.+(js|jsx|json|yml|yaml|css|md)\\\"\"\n  }\n}\n```\n\n### Conclusion\n\nSetting up ESLint and Prettier in your projects can go a long way in helping you\nwrite better, more readable code. Even more so when your working in a team\nenvironment.\n\nYou may have noticed that the \"rules\" key's where empty in the .eslintrc examples.\nESLint does a lot by default but if you want more in-depth, fine grain control\nover the coding style for your project visit their [docs on rules here!](https://eslint.org/docs/rules/)\n","data":{"title":"ESLint And Prettier","image":"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fmiro.medium.com%2Fmax%2F1328%2F1*fA65R1umkZBVJjyBTTy6Xw.png&f=1&nofb=1","description":"Setting up linters and code formatters is really important to group projects and solo projects alike. This guide aims to help you easily set these things up in your project."}},"__N_SSG":true}